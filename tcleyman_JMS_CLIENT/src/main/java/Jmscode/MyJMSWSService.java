
package Jmscode;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140319.1121
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "MyJMSWSService", targetNamespace = "http://tcleyman/", wsdlLocation = "http://localhost:7001/MyJMSWS_JMS/MyJMSWS?WSDL")
public class MyJMSWSService
    extends Service
{

    private final static URL MYJMSWSSERVICE_WSDL_LOCATION;
    private final static WebServiceException MYJMSWSSERVICE_EXCEPTION;
    private final static QName MYJMSWSSERVICE_QNAME = new QName("http://tcleyman/", "MyJMSWSService");

    static {
        WebServiceException e = null;
        URL url = null;
        try {
            url = new URL(Jmscode.MyJMSWSService.class.getResource("."), "http://localhost:7001/MyJMSWS_JMS/MyJMSWS?WSDL");
        } catch (MalformedURLException murl) {
            e = new WebServiceException(murl);
        }
        MYJMSWSSERVICE_WSDL_LOCATION = url;
        MYJMSWSSERVICE_EXCEPTION = e;
    }

    public MyJMSWSService() {
        super(__getWsdlLocation(), MYJMSWSSERVICE_QNAME);
    }

    public MyJMSWSService(WebServiceFeature... features) {
        super(__getWsdlLocation(), MYJMSWSSERVICE_QNAME, features);
    }

    public MyJMSWSService(URL wsdlLocation) {
        super(wsdlLocation, MYJMSWSSERVICE_QNAME);
    }

    public MyJMSWSService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, MYJMSWSSERVICE_QNAME, features);
    }

    public MyJMSWSService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MyJMSWSService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns MyJMSWS
     */
    @WebEndpoint(name = "MyJMSWSPort")
    public MyJMSWS getMyJMSWSPort() {
        return super.getPort(new QName("http://tcleyman/", "MyJMSWSPort"), MyJMSWS.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MyJMSWS
     */
    @WebEndpoint(name = "MyJMSWSPort")
    public MyJMSWS getMyJMSWSPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://tcleyman/", "MyJMSWSPort"), MyJMSWS.class, features);
    }

    private static URL __getWsdlLocation() {
        if (MYJMSWSSERVICE_EXCEPTION!= null) {
            throw MYJMSWSSERVICE_EXCEPTION;
        }
        return MYJMSWSSERVICE_WSDL_LOCATION;
    }

}
